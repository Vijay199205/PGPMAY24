//condtion rendering class

import React, { useState } from 'react';
import About from './Component/About';
import './App.css';
import Contact from './Component/Contact'
import Blog from './Component/Blog';

function App() {
  let visisble = true;
  const [value , display] = useState(true);

  const handaler=()=>{
    display(!value)
  }
  return(
  <div>
  {value && <h1>My first react app</h1>}
    {visisble ? <About/> : <Contact/>}
    {visisble && <Blog/>}
    <button onClick={handaler}>value dispaly</button>
   </div>
  )
}



export default App;


//props concept 
import React from 'react'
import Childernprop from './Component/Childernprop';
import Section from './Component/Section';
//import Contact from './Csomponent/Contact';

//var fname = 'vijay';

function App() {
  return (
    <div>
     <h1>Hello</h1>
     {/* <Section rollNo="1" marks="85" subject="Physics">
      <Childernprop/>
     </Section> */}
     {/* <Childernprop>
      <h1>I am intersted to beacome full stack developer</h1>
     </Childernprop>  */}

      {/* <Contact firstName={fname} age="32" salary="2000"/>
      <Contact firstName="Vinay" age="40" salary="50000"/>
      <Contact firstName="aditya" age="20" /> */}
    </div>
  )
}

export default App


// state Code 

import React, { useState } from 'react'

function App() {
  const [count, setCount] = useState(0);
  const [bgColor, setBgcolr] = useState('red');

 function handleIncrement(){
  setCount(count + 1)
 }
  return (
    <div style={{backgroundColor:bgColor}}>
     <h1>Count: {count}</h1>
     <button onClick={()=>setBgcolr('blue')}>Bule</button>
     <button onClick={()=>setBgcolr('green')}>Green</button>
     <button onClick={handleIncrement}>One Click</button>
    </div>
  )
}

export default App


// normal theme changer

import React, { useState } from 'react'

function App() {
  
  const [bgColor, setBgColor] = useState("white");
  const [color, setColor] = useState("black");
  const [text, setText] = useState("Drak")

  function handleTheme(){
    if(bgColor === "black"){
      setBgColor("white");
      setColor("black");
      setText("Dark");
    }else{
      setBgColor("black");
      setColor("white");
      setText("Light")
    }
    
  }
  return (
    <div style={{backgroundColor:bgColor, color:color}}>
    <h1>Hello Word</h1>
    <p>Learning State</p>
    <button onClick={handleTheme}>{text} Mode</button>

   
    </div>
  )
}

export default App

// Better Design patten
import React, { useState } from 'react'

function App() {
  
  const [condition, setCondition] = useState(false);
  function handleTheme(){
    setCondition(!condition);
  }
  return (
    <div style={{backgroundColor:condition?"black":"white", color:condition?"white":"black"}}>
    <h1>Hello Word</h1>
    <p>Learning State</p>
    <button onClick={handleTheme}>{condition?"Light":"white"} Mode</button>

   
    </div>
  )
}

export default App


// batching or scheduling and privious state

import React, { useState } from 'react'

function App() {
  
  const [count, setCount] = useState(0);
  function handleIncrement(){
    setCount((count) => count + 1);
    setCount((count) => count + 1);
    setCount((count) => count + 1);
    setCount((count) => count + 1);
  }
  return (
    <div>
    <h1>count: {count}</h1>
    <button onClick={handleIncrement}>Increment</button>
    </div>
  )
}

export default App


// controlled Component
import React, { useState }  from 'react'

function App() {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("")
  const [condition, setCondition] = useState(false)
  function handleSubmit(e){
    e.preventDefault();
  // setName("Hello Good Moring Vijay")
  setCondition(true);
  }
  
  return (
    <div>
    <form onSubmit={handleSubmit}>
   <input type="text" value={name} onChange={(e) =>setName(e.target.value)}/>
   <input type='email' value={email} onChange={(e)=>setEmail(e.target.value)}/>
    <button type='submit'>Submit</button>
    </form>
    {condition && <h1>{name} {email}</h1>}
    </div>
  )
}

export default App

// objects created inside controlled Component
import React, { useState }  from 'react'

function App() {
  const [inputs, setInputs] = useState({
    name:"",
    email:"",
    pass:""
  });
  
  function handleSubmit(e){
    e.preventDefault();
  // setName("Hello Good Moring Vijay")
  //setCondition(true);
  }
  
  return (
    <div>
    <form onSubmit={handleSubmit}>
   <input type="text" value={inputs.name} onChange={(e) =>setInputs((prev)=>({...prev, name:e.target.value }))}/>
   <input type='email' value={inputs.email} onChange={(e)=>setInputs((prev)=>({...prev, email:e.target.value}))}/>
   <input type='password' value={inputs.pass} onChange={(e)=>setInputs((prev)=>({...prev, pass:e.target.value}))}/>
    <button type='submit'>Submit</button>
    </form>
    <h1>{inputs.name} {inputs.email} {inputs.pass}</h1>
    </div>
  )
}

export default App


// Mounting , Updating , Unmounting

import React, { useState }  from 'react'

function App() {

const [count, setCount] = useState(0);
const [condition, setCondition] = useState(false)

  
  console.log('hey');
  return (
    <div>
    <h1>count: {count}</h1>
    <button onClick={()=>setCondition(!condition)}>toggle</button>
    {condition && <About/>}

  



    </div>
  )
}

export default App;


function About(){
  const [number, setNumber] = useState(100);
  console.log("about")
  return(
    <div>
      <h1>Number is {number}</h1>
      <button onClick={()=>setNumber(number - 2)}>--</button>
    </div>
  )

}

//Uncontrolled Component

import React, { useRef } from "react";

function Uncontrolled() {
  const fnameRef = useRef(null);
  const lnameRef = useRef(null);

  const SubmitHandler = (e) => {
    e.preventDefault();
    console.log("fname", fnameRef.current.value);
    console.log("lname", lnameRef.current.value);
  };

  return (
    <div>
      <h1>controlled components</h1>
      <form onSubmit={SubmitHandler}>
        <input
          type="text"
          name="fname"
          ref={fnameRef}
          placeholder="Enter your Firstname"
        />
        <br /> <br />
        <input
          type="text"
          name="lname"
          ref={lnameRef}
          placeholder="Enter your Firstname"
        />
        <br /> <br />
        <button>Submit</button>
      </form>
    </div>
  );
}

export default Uncontrolled;


// controlled components

import React, { useState } from "react";
function Controlled() {
  const [values, setValues] = useState({
    fname: "",
    lname: "",
  });

  function handlerInput(e) {
    let { name, value } = e.target;

    setValues({
      ...values,
      [name]: value,
    });
  }
  return (
    <div>
      <h1>controlled components</h1>
      <form>
        <input
          type="text"
          name="fname"
          value={values.fname}
          onChange={handlerInput}
          placeholder="Enter your Firstname"
        />
        <input
          type="text"
          name="lname"
          value={values.lname}
          onChange={handlerInput}
          placeholder="Enter your Firstname"
        />
        <button>Submit</button>
      </form>
    </div>
  );
}

export default Controlled;

// useEffect hooks

import React, { useEffect, useState }  from 'react'
//import Post from './Component/Post';



function App() {

const [count, setCount] = useState(0);

useEffect(()=>{
  console.log("Vijay");
},[count])

  return (
    <div>
 {/* <Post /> */}
    <h1>count: {count}</h1>
    <button onClick={()=>setCount(count + 1)}>+</button> 
    
    </div>
  )
}

export default App;

useEffect hook with Api

import React, { useState,useEffect } from 'react'

function Post() {
const [joke, setJoke] = useState('');
useEffect(()=>{
    handlePost();
},[])
    function handlePost(){
        console.log("calling")
        fetch("https://official-joke-api.appspot.com/random_joke")
            .then((result)=>result.json())
            .then((response)=>setJoke(response))
    }
    //console.log({post.userId})
  return (
    
    <div>
    <h1>Displaying Post in Json  Placeholder Data</h1>
    <p>Joke Id:{joke.id}</p>
      <p>Joke Setup:{joke.setup}</p>
      <p>Joke Punchline:{joke.punchline}</p>
      <button onClick={handlePost}>Gernerate post</button>
    </div>
  )
}

export default Post

//cleaning function

import React, { useEffect, useState }  from 'react'
//import React  from 'react'
// import Github from './Component/Github';
//import Lifecycle from './Component/Lifecycle';
//import ParentComponent from './Component/ParentComponent';
//import Post from './Component/Post';



function App() {

const [count, setCount] = useState(0);

useEffect(()=>{
  const fun = ()=>console.log("effect");
  document.addEventListener("click", fun);
  return()=>{
    document.removeEventListener("click", fun)
  }

})

  return (
    <div>
    {/* <Github/> */}
    {/* <ParentComponent/> */}
 {/* <Post /> */}
    <h1>count: {count}</h1>
    <button onClick={()=>setCount(count + 1)}>+</button> 
    
    </div>
  )
}

export default App;






